# Perform an NPT simulation in LAMMPS given a colloid (tile + motif)
# Author: Nathan A. Mahynski
# 05/06/2022

# Variables

#variable	cpu_count equal __CPU_COUNT__
variable	rec_freq equal __REC_FREQ__
variable	res_freq equal __RES_FREQ__
variable	Tstart equal __TSTART__
variable	Tfinal equal __TFINAL__
variable	Tdamp equal __TDAMP__
variable	Pstart equal __PSTART__
variable	Pfinal equal __PFINAL__
variable	Pdamp equal __PDAMP__
variable	dt equal __TIMESTEP__
variable	bins equal __TABLE_BINS__
variable	comm_cut equal __PSEUDODIAMETER__
variable	n_init_loops equal __N_INIT_LOOPS__
variable	n_equil_loops equal __N_EQUIL_LOOPS__
variable	n_prod_loops equal __N_PROD_LOOPS__
variable        steps_per equal __STEPS_PER_LOOP__

# Settings

#package		omp ${cpu_count} neigh yes
processors	* * 1 grid numa
units		lj
boundary	p p p
atom_style	molecular
dimension	2

# Setup - read from initial configuration file (on a grid) 

read_data	__INIT_CONFIG__
dump		dump all custom ${rec_freq} log.dump id type xs ys zs vx vy vz
dump_modify	dump pbc yes sort id flush yes
log		log.thermo
thermo		${rec_freq}
thermo_style	custom step atoms temp press pe ke epair etotal vol
thermo_modify	flush yes line one norm yes
pair_style	table/omp linear ${bins}
restart		${res_freq} restart_1.lammps restart_2.lammps

__PAIR_COEFF__

# Confine to 2D

fix		momentum all momentum ${steps_per} linear 1 1 1 angular rescale
fix		dimensionality all enforce2d
timestep	${dt}

#########################################
# Initial randomization - high T, low P #
#########################################

comm_modify	cutoff ${comm_cut}
neigh_modify	exclude molecule/intra all

velocity	all create ${T} 123456789 dist gaussian mom yes rot yes
run		0
velocity	all scale ${T}

variable a loop ${n_in_loops}
label init_loop
fix             integrator_init all rigid/npt/small molecule langevin ${Tstart} ${Tstart} ${Tdamp} 123456789 iso ${Pstart} ${Pstart} ${Pdamp} pchain 1.0
set atom * z 0
set atom * vz 0
run             ${steps_per}
unfix 		integrator_init
next a
jump SELF init_loop

##############################################
# Equilibration phase - cool/compress slowly #
##############################################

variable a loop ${n_eq_loops}
variable Pa equal ${Pstart}
variable dP equal (${Pstart} - ${Pfinal})/${n_eq_loop}
variable Pb equal ${Pa}-dP
variable Ta equal ${Tstart}
variable dT equal (${Tstart} - ${Tfinal})/${n_eq_loop}
variable Tb equal ${Ta}-dT
label eq_loop
fix             integrator_equil all rigid/npt/small molecule langevin ${Ta} ${Tb} ${Tdamp} 123456789 iso ${Pa} ${Pb} ${Pdamp} pchain 1.0
set atom * z 0
set atom * vz 0
run             ${steps_per}
unfix 		integrator_equil
next a
variable Pa equal ${Pb}
variable Pb equal ${Pb}-${dP}
variable Ta equal ${Tb}
variable Tb equal ${Tb}-${dT}
jump SELF eq_loop

########################################
# Production phase - run at fixed T, P #
########################################

variable a loop ${n_pr_loops}
label pr_loop
fix             integrator_prod all rigid/npt/small molecule langevin ${Tfinal} ${Tfinal} ${Tdamp} 123456789 iso ${Pfinal} ${Pfinal} ${Pdamp} pchain 1.0
set atom * z 0
set atom * vz 0
run             ${steps_per}
unfix		integrator_prod
next a
jump SELF pr_loop
